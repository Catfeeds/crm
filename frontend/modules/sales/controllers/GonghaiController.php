<?php
/**
 * Created by PhpStorm.
 * User: liujx
 * Date: 2017/6/28
 * Time: 16:44
 */

namespace frontend\modules\sales\controllers;

use common\helpers\Helper;
use common\logic\GongHaiLogic;
use common\models\Area;
use common\models\GongHai;
use common\models\GongHaiLog;
use common\models\OrganizationalStructure;
use yii\db\Query;
use yii;

/**
 * Class GonghaiController
 * 销售助手-公海处理控制器
 * @author liujx
 * @package frontend\modules\sales\controllers
 */
class GonghaiController extends AuthController
{
    /**
     * 请求之前的处理
     * @param \yii\base\Action $action
     * @return bool
     */
    public function beforeAction($action)
    {
        $this->mixRequest = $this->getPData();
        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    /**
     * 公海线索-列表
     * @return array
     */
    public function actionLists()
    {
        // 处理查询的条件
        $where = Helper::handleWhere($this->mixRequest, [
            // 查询地址
            'area_id' => function($value) {
                // 查询ID
                $ids = Area::getIds($value);
                return ['in', 'area_id', $ids];
            },
            // 查询车系
            'intention_id' => ['func' => 'intval'],
            // 查询原因
            'reason_id' => function($value) {
                $value = explode(',', $value);
                // 将字符串转为int
                foreach ($value as &$v) {
                    $v = intval($v);
                }
                unset($v);
                return ['in', 'reason_id', $value];
            },

            // 查询是否有客户跟进过
            'follow_up' => '='
        ]);


        // 查询数据条数
        $query = GongHai::find()->where($where);

        // 查询数据条数
        $intTotal = $query->count();
        $page = $this->getPage($this->mixRequest, $intTotal);

        // 默认
        $arrReturn = [
            'pages' => $page['pages'],
            'models' => [],
//            'sql' => $query->createCommand()->getRawSql(),
        ];

        // 排序字段
        $field = empty($this->mixRequest['sort']) ? 'create_time' : 'id';

        // 排序方式
        $orderBy = empty($this->mixRequest['order']) ? 'desc' : $this->mixRequest['order'];
        $orderBy = $orderBy === 'asc' ? SORT_ASC : SORT_DESC;

        // 存在数据
        if ($intTotal > 0) {
            $arrReturn['models'] = $query->select([
                'id AS clue_id', 'customer_name', 'customer_phone',
                'intention_des', 'reason_des', 'create_time', 'area_name', 'follow_up'
                ])
                ->offset($page['offset'])
                ->limit($page['limit'])
                ->orderBy([$field => $orderBy])
                ->asArray()
                ->all();

//            $arrReturn['sql'] = $query->select([
//                'id AS clue_id', 'customer_name', 'customer_phone',
//                'intention_des', 'reason_des', 'create_time', 'area_name'
//            ])->offset($page['offset'])
//                ->limit($page['limit'])
//                ->orderBy([$field => $orderBy])->createCommand()->getRawSql();
        }

        return $arrReturn;
    }

    /**
     * 公海线索-顾问跟进情况
     * @return array
     */
    public function actionLogs()
    {
        $this->handleParams('请求参数为空');
        $arrReturn = [];

        // 请求参数不能为空
        if (!empty($this->mixRequest['clue_id'])) {

            // 公海线索信息必须存在
            $seas = GongHai::findOne((int)$this->mixRequest['clue_id']);
            $this->handleParams('公海线索信息不存在');
            if ($seas) {
                $this->handleParams('success', 200);

                // 查询数据
                $query = GongHaiLog::find()->where([
                    'customer_phone' => $seas->customer_phone,
                    'reason_id' => 1,
                ]);

                // 通过数据条数获取分页信息
                $total = $query->count();
                $page = $this->getPage($this->mixRequest, $total);
                $arrReturn = [
                    'pages' => $page['pages'],
                    'models' => [],
                ];

                // 查询数据
                if ($total > 0) {
                    $arrReturn['models'] = $query->select([
                        'start_time', 'end_time', 'salesman_name',
                        'reason_name', 'defeated_reason', 'shop_des',
                        'clue_id',
                    ])->orderBy('id DESC')
                    ->offset($page['offset'])
                    ->limit($page['limit'])
                    ->all();
                }
            }

        }

        return $arrReturn;
    }

    /**
     * 公海线索-进入公海原因列表
     * @return array
     */
    public function actionReasons()
    {
        return (new Query())->from('{{%gonghai_reason}}')->all();
    }

    /**
     * 公海线索-顾问认领
     * @return array
     */
    public function actionClaim()
    {
        $this->handleParams('请求参数为空');
        $arrReturn = [];
        $arrLogs = [
            'request' => $this->mixRequest,
        ];

        // 请求参数不能为空
        if (!empty($this->mixRequest['clue_id'])) {
            // 公海线索信息必须存在
            $seas = GongHai::findOne((int)$this->mixRequest['clue_id']);
            $this->handleParams('公海线索信息不存在');
            if ($seas) {
                // 查询门店信息
                /* @var $user \common\models\User */
                $user = Yii::$app->user->identity;
                $shop = OrganizationalStructure::findOne($user->shop_id);
                $this->handleParams('顾问门店信息不存在');
                if ($shop) {
                    // 认领
                    $arrLogs['result'] = $arrResult = GongHaiLogic::highSeasGoOut($seas, $shop, $user);
                    if ($arrResult['status'] === true && $arrResult['message']) {
                        $this->handleParams('认领成功', 200);
                    } else {
                        $this->handleParams($arrResult['message']);
                    }
                }
            }
        }

        // 记录日志返回
        $arrLogs['response'] = Yii::$app->params['message'];
        $this->writeLogs($arrLogs);
        return $arrReturn;
    }
}